openapi: 3.0.0
info:
  version: "0.5.0"
  title: TARMED Validator API
  description: |
    API for requesting & validating TARMED Data.
    
    **IMPORTANT:**
     * This API is currently under development. A free preview version (path `/v0`) is currently available and will be deprecated after releasing the production version `/v1`).
     
    Please contact me (info@tarmed-browser.ch) for an API-Key.

    Status, roadmap, bugtracker and more information can be found at GitHub: [https://github.com/mitosch/tarmed-validator-api-doc](https://github.com/mitosch/tarmed-validator-api-doc)
    
    Descriptions of TARMED values refer to the original MS Access database (e.g. `Leistungsnummer (LEISTUNG.LNR)`).
    
    For more information about TARMED, please visit these resources:
    
      * [Tarifsystem TARMED, Bundesamt fÃ¼r Gesundheit](https://www.bag.admin.ch/bag/de/home/versicherungen/krankenversicherung/krankenversicherung-leistungen-tarife/Aerztliche-Leistungen-in-der-Krankenversicherung/Tarifsystem-Tarmed.html)
    
servers:
  - url: http://{environment}.tarmed-validator.ch/api/{version}
    variables:
      environment:
        default: api
        enum:
          - api
          - api.staging
      version:
        default: v0
        enum:
          - v0 # preview version
security:
  - ApiKeyAuth: []

tags:
  - name: browser
    description: Read TARMED data (TARMED Browser API)
    externalDocs:
      url: http://www.tarmed-browser.ch
  - name: validator
    description: Validate TARMED data (TARMED Validator API)

paths:
  /validate:
    put:
      summary: Validate TARMED services
      description: |
        Validate multiple TARMED services in a single requests. Useful for validating single invoices.
      tags:
        - validator
      parameters:
        - $ref: "#/components/parameters/locale"
        - $ref: "#/components/parameters/tarmedVersion"
      requestBody:
        description: Payload with configuration, patient, physician and services.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  $ref: "#/components/schemas/Config"
                patient:
                  $ref: "#/components/schemas/Patient"
                physician:
                  $ref: "#/components/schemas/Physician"
                services:
                  type: array
                  items:
                    $ref: "#/components/schemas/Service"
      responses:
        "200":
          description: Validation status report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  /validate-invoices:
    put:
      summary: Validate TARMED services structured by bills
      description: |
        Validate multiple invoices with multiple TARMED services in a single requests. Useful for validating multiple invoices (as presented to a patient).
      tags:
        - validator
      parameters:
        - $ref: "#/components/parameters/locale"
        - $ref: "#/components/parameters/tarmedVersion"
      requestBody:
        description: Payload with configuration, patient, physician and invoices with services.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  $ref: "#/components/schemas/Config"
                patient:
                  $ref: "#/components/schemas/Patient"
                physician:
                  $ref: "#/components/schemas/Physician"
                invoices:
                  type: array
                  description: Array of invoices
                  items:
                    properties:
                      internal_id:
                        oneOf:
                          - type: string
                          - type: integer
                        format: integer
                        example: 12345                        
                      case_nr:
                        oneOf:
                          - type: string
                          - type: integer
                        format: string
                        example: "C-001"
                        description: Case reference of the invoice. Needed for validation of service rules per case.
                      services:
                        type: array
                        description: Array of services of a single invoice
                        items:
                          $ref: "#/components/schemas/Service"
      responses:
        "200":
          description: Validation status report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  /services/values/{code}:
    get:
      summary: Get values of a TARMED service
      tags:
        - browser
      description: Get values of a TARMED service by nr.
      parameters:
        - name: code
          in: path
          description: TARMED Leistungsnummer
          required: true
          schema:
            type: string
            pattern: '^\d{2}\.\d{4}$'
          example: 00.0010
        - $ref: "#/components/parameters/tarmedVersion"
      responses:
       "200":
          description: A JSON array of one TARMED service
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TarmedServiceValues"
  /services/texts/{code}:
    get:
      summary: Get texts of a TARMED service
      tags:
        - browser
      description: Get texts like name, medical and technical interpretation of a TARMED service by code.
      parameters:
        - name: code
          in: path
          description: TARMED Leistungsnummer
          required: true
          schema:
            type: string
            pattern: '^\d{2}\.\d{4}$'
          example: 00.0010
        - $ref: "#/components/parameters/tarmedVersion"
        - $ref: "#/components/parameters/locale"
      responses:
       "200":
          description: A JSON array of one TARMED service
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TarmedServiceTexts"
  /services/texts:
    get:
      summary: Get texts of TARMED services by query
      tags:
        - browser
      description: Find TARMED services by code or title. Returns an array of TARMED text objects with name, medical and technical interpretation. Max. 30 items returned.
      parameters:
        - name: q
          in: query
          description: String to search for.
          schema:
            type: string
            example: leistung
        - $ref: "#/components/parameters/tarmedVersion"
        - $ref: "#/components/parameters/locale"
      responses:
       "200":
          description: A JSON array of one TARMED service
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TarmedServiceTexts"        
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    Config:
      type: object
      properties:
        ignore_errors:
          type: array
          items:
            type: number
            format: integer
            example:
            - 5007
            - 6000
            description: error and warning codes to ignore (will be placed in ignored array response)
        conditions:
          type: array
          items:
            type: string
            enum:
            - inaccurate_quantity_warnings
            - inaccurate_quantity_errors
            description: >
              Set special conditions for validation options. Available conditions are:
              
              * `inaccurate_quantity_warnings` - Validate inaccurate quantity rules (pro Aufenthalt, pro Testreihe, pro Schwangerschaft, pro Geburt, pro Eingriff, etc.) which can't be validated by the given data as warnings.
              * `inaccurate_quantity_errors` - Validate inaccurate quantity rules (pro Aufenthalt, pro Testreihe, pro Schwangerschaft, pro Geburt, pro Eingriff, etc.) which can't be validated by the given data as errors. inaccurate_quantity_errors overwrites inaccurate_quantity_warnings if both conditions are given.
    Patient:
      type: object
      properties:
        dob:
          type: string
          format: date
        gender:
          type: string
          enum: [f, m]
          description: >
            Gender:
             * `f` - Female
             * `m` - Male
    Physician:
      type: object
      properties:
        qualifications:
          type: array
          items:
            properties:
              code:
                type: string
                format: string
                example: "0100"

    Service:
      type: object
      properties:
        code:
          type: string
          description: TARMED code
          example: 00.0010
        ref_code:
          type: string
          description: TARMED reference code
          example: 00.0010
        quantity:
          type: number
          format: integer
        session:
          type: number
          format: integer
        side:
          type: string
          enum: [l, r]
          description: >
            Gender:
             * `l` - left
             * `r` - right
        date:
          type: string
          format: date
        internal_id:
          oneOf:
            - type: string
            - type: integer
          format: integer
          example: 12345
    Report:
      type: object
      properties:
        validation:
          type: string
          enum: [valid, invalid]
          description: >
            validation status
             * `valid` - validation succeeded
             * `invalid` - validation failed, detailled information in errors array
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ErrorCode"
        warnings:
          type: array
          items:
            $ref: "#/components/schemas/ErrorCode"
        ignored:
          type: object
          description: ignored errors and warnings when configuration option `ignore_errors` is set
          properties:
            errors:
              type: array
              items:
                $ref: "#/components/schemas/ErrorCode"
            warnings:
              type: array
              items:
                $ref: "#/components/schemas/ErrorCode"
    ErrorCode:
      type: object
      properties:
        code:
          type: integer
          description: >
            error code:
             * `2000` - TARMED version not found
             * `2001` - TARMED code not found
             * `2010` - Cumulation invalid: exclusion
             * `2020` - Cumulation invalid: limited inclusion
             * `2051` - Missing reference (addition)
             * `2052` - Referenced parent not listed
             * `2053` - Referenced parent not allowed
             * `2057` - Reference error: service type reference (R)
             * `2070` - Side error: side of service not defined
             * `2071` - Side error: invalid side given
             * `3001` - Patient error: invalid gender
             * `3002` - Patient error: invalid date of birth
             * `3010` - Patient error: service not allowed for gender
             * `3011` - Patient error: service not allowed for patient's age
             * `4002` - Service attribute error: invalid date
             * `5007` - Quantity error: quantity per session invalid
             * `5008` - Quantity error: quantity per case invalid
             * `5009` - Quantity error: quantity per patient invalid
             * `5010` - Quantity error: quantity per side invalid
             * `5011` - Quantity error: quantity per inhabitation (Aufenthalt) invalid (i)
             * `5012` - Quantity error: quantity per test serie (Testreihe) invalid (i)
             * `5013` - Quantity error: quantity per pregnancy (Schwangerschaft) invalid (i)
             * `5014` - Quantity error: quantity per birth (Geburt) invalid (i)
             * `5015` - Quantity error: quantity per radiation phase (Bestrahlungsphase) invalid (i)
             * `5016` - Quantity error: quantity per transmittal (Einsendung) invalid (i)
             * `5017` - Quantity error: quantity per autopsy (Autopsie) invalid (i)
             * `5018` - Quantity error: quantity per expertise (Gutachten) invalid (i)
             * `5019` - Quantity error: quantity per intervention (Eingriff) invalid (i)
             * `5021` - Quantity error: quantity per day invalid
             * `5022` - Quantity error: quantity per week invalid
             * `5023` - Quantity error: quantity per month invalid
             * `5026` - Quantity error: quantity per year invalid
             * `5031` - Quantity error: quantity per radiation phase and volume (Bestrahlungsphase und Bestrahlungsvolumen) invalid (i)
             * `5040` - Quantity error: quantity per joint region (Gelenkregion) invalid (i)
             * `5043` - Quantity error: quantity per examination (Untersuchung) invalid (i)
             * `5108` - Quantity warning: case not set for service with matching rule
             * `6000` - Qualification error: service not allowed due to missing qualification
             * `6004` - Qualification error: qualification not found
             * `6005` - Qualification error: malformed physician, qualification format
             * `6100` - Qualification warning: qualification not set.
             * `6101` - Qualification warning: qualification not set. Service has special cumulation exceptions.
             * `7000` - Warning: Duplicate entry in session found
             
             (i): inaccurrate validation, see config.conditions for details
        message:
          type: string
          description: Additional detail about the validation error
        index:
          type: number
          format: integer
          description: When an array was given, index points to the validated element
        internal_id:
          oneOf:
            - type: string
            - type: integer
          format: integer
          example: 12345
          description: ID of given position in request which the error or warning refers to.
    TarmedServiceValues:
      allOf:
      - type: object
        properties:
          code:
            type: string
            description: TARMED Leistungsnummer (LEISTUNG.LNR)
          assi_count:
            type: number
            format: integer
            description: Anzahl Assistenten (LEISTUNG.ANZ_ASSI)
          change_min:
            type: number
            format: integer
            description: Wechselzeit (LEISTUNG.WECHSEL_MIN)
          dignity_quant:
            type: string
            description: "DignitÃ¤ts-Nr.: \"FMH\" und Nr. zweistellig (LEISTUNG.QT_DIGNITAET)"
          indication_min:
            type: number
            format: integer
            description: Befund (LEISTUNG.BEFUND_MIN)
          prepost_min:
            type: number
            format: integer
            description: Vorbereitung/Nachbereitung (LEISTUNG.VBNB_MIN)
          rate_factor_assi:
            type: number
            format: float
            description: Taxpunkte Assistent (LEISTUNG.TP_ASSI)
          rate_factor_doc:
            type: number
            format: float
            description: Taxpunkte Arztleistung (LEISTUNG.TP_AL)
          rate_factor_pdoc:
            type: number
            format: float
            description: "Taxpunkte Arztleistung ohne FMH (calculated: LEISTUNG.TP_AL * LEISTUNG.F_AL_R)"
          rate_factor_tech:
            type: number
            format: float
            description: Taxpunkte Technische Leistung (LEISTUNG.TP_TL)
          room_min:
            type: number
            format: integer
            description: Raumzeit (LEISTUNG.RAUM_MIN, not from Einstein ;) )
          service_min:
            type: number
            format: integer
            description: Leistung im engeren Sinne (LEISTUNG.LSTGIMES_MIN)
          sex:
            type: string
            enum: [male, female]
            description: >
              Patientengeschlecht (LEISTUNG.SEX)
               * `male` - MÃ¤nnlich
               * `female` - Weiblich
          side:
            type: boolean
            description: >
              Seitenangabe (LEISTUNG.SEITE)
               * `true` - Die Angabe auf welcher Seite die Leistung erbracht wurde ist zwingend
               * `false` - keine Seitenangabe nÃ¶tig
          surcharge_doc:
            type: number
            format: float
            description: Zuschlags- oder Reduktions-Faktor auf Arztleistung (LEISTUNG.F_AL)
          surcharge_pdoc:
            type: number
            format: float
            description: Zuschlags- oder Reduktions-Faktor auf Arztleistung ohne FMH (LEISTUNG.F_AL_R)
          surcharge_tech:
            type: number
            format: float
            description: Zuschlags- oder Reduktions-Faktor auf techn. Leistung (LEISTUNG.F_TL)
        example:
          code: 00.0010
          assi_count: 0
          change_min: 0
          dignity_quant: "FMH05"
          indication_min: 0
          prepost_min: 0
          rate_factor_assi: 0
          rate_factor_doc: 10.42
          rate_factor_pdoc: 9.69
          rate_factor_tech: 8.19
          room_min: 5
          service_min: 5
          sex: null
          side: false
          surcharge_doc: 1
          surcharge_pdoc: 0.93
          surcharge_tech: 1
      - $ref: "#/components/schemas/TarmedDates"
    TarmedServiceTexts:
      allOf:
        - type: object
          properties:
            code:
              type: string
              description: TARMED nr (LEISTUNG_TEXT.LNR)
            name:
              type: string
              description: Name of the service (LEISTUNG_TEXT.BEZ_255)
            medical_info:
              type: string
              description: Medical interpretation (LEISTUNG_TEXT.MED_INTERPRET)
            technical_info:
              type: string
              description: Technical interpretation (LEISTUNG_TEXT.TECH_INTERPRET)
            locale:
              type: string
              enum: [de, fr, it]
              description: >
                Locale:
                 * `de` - German
                 * `fr` - French
                 * `it` - Italian
          example:
            code: "00.0010"
            name: "Konsultation, erste 5 Min. (Grundkonsultation)"
            medical_info: "Beinhaltet alle Ã¤rztlichen Leistungen, die der Facharzt in seiner..."
            technical_info: "Technische Interpretation ..."
            locale: "de"
        - $ref: "#/components/schemas/TarmedDates"
    TarmedDates:
      type: object
      properties:
        valid_from:
          type: string
          format: date
          description: gÃ¼ltig von (*.GUELTIG_VON)
        valid_until:
          type: string
          format: date
          description: gÃ¼ltig bis (*.GUELTIG_BIS)
        change_date:
          type: string
          format: date
          description: mutiert am (*.MUT_DAT)
      example:
        valid_from: "2018-01-01"
        valid_until: "2999-12-31"
        change_date: "2017-03-12"

  parameters:
    locale:
      name: locale
      in: query
      description: >
        Language
         * `de` - german (defaut, if not set)
         * `fr` - french
         * `it` - italian
      schema:
        type: string
        example: de
    tarmedVersion:
      name: tarmed_version
      in: query
      description: >
        TARMED tarif version
         * `01.09` -  (default, if not set)
         * `01.08.01_BR`
         * List of all versions: [https://www.tarmed-browser.ch/de/versionen](https://www.tarmed-browser.ch/de/versionen)
      schema:
        type: string
        example: 01.09
    invoiceId:
      name: invoiceId
      in: path
      description: ID of the invoice
      required: true
      schema:
        type: string
  responses:
    UnauthorizedError:
      description: API key is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string